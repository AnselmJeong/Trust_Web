import reflex as rx\nfrom Trust_Web.public_goods_state import PublicGoodState, TOTAL_ROUNDS, NUM_COMPUTER_PLAYERS, MULTIPLIER\n\ndef public_goods_game_component() -> rx.Component:\n    \"\"\"UI component for the Public Goods Game.\"\"\"\n    return rx.card(\n        rx.vstack(\n            rx.hstack(\n                rx.icon(tag=\"users\", mr=2), # Placeholder icon, similar to hand/group\n                rx.heading(\"Public Goods Game\", size=\"lg\"),\n                rx.spacer(),\n                rx.text(\n                    rx.span(PublicGoodState.display_round_number, font_weight=\"bold\"),\n                    f\" / {TOTAL_ROUNDS} Rounds\",\n                    color_scheme=\"gray\"\n                ),\n                justify=\"between\",\n                align_items=\"center\",\n                width=\"100%\"\n            ),\n            rx.progress(\n                value=PublicGoodState.current_round,\n                max_=TOTAL_ROUNDS, # max is a reserved keyword, use max_\n                width=\"100%\",\n                color_scheme=\"blue\",\n                height=\"sm\",\n                border_radius=\"md\"\n            ),\n\n            rx.text(f\"Participants: {NUM_COMPUTER_PLAYERS + 1} (You and {NUM_COMPUTER_PLAYERS} computer players)\", size=\"sm\", color_scheme=\"gray\"),\n            rx.text(f\"Your current balance: {PublicGoodState.human_balance}\", size=\"sm\", color_scheme=\"gray\"),\n            rx.text(f\"Contribution Multiplier: x{MULTIPLIER}\", size=\"sm\", color_scheme=\"gray\"),\n            \n            rx.divider(),\n\n            rx.cond(\n                ~PublicGoodState.game_finished,\n                rx.vstack(\n                    rx.text(\"How much will you contribute to the common pool?\"),\n                    rx.input(\n                        placeholder=f\"Enter amount (0 - {PublicGoodState.human_balance})\",\n                        value=PublicGoodState.human_contribution.to_string(), # Bind to string representation for input\n                        on_change=PublicGoodState.set_human_contribution,\n                        type=\"number\",\n                        is_disabled=PublicGoodState.game_played\n                    ),\n                    rx.cond(\n                        PublicGoodState.contribution_error != \"\",\n                        rx.text(PublicGoodState.contribution_error, color_scheme=\"red\", size=\"sm\")\n                    ),\n                    align_items=\"stretch\",\n                    spacing=\"2\",\n                    width=\"100%\"\n                )\n            ),\n\n            rx.cond(\n                PublicGoodState.game_finished,\n                rx.button(\n                    \"Play Again\",\n                    on_click=PublicGoodState.reset_game,\n                    width=\"100%\",\n                    size=\"lg\",\n                    color_scheme=\"green\"\n                ),\n                rx.cond(\n                    PublicGoodState.game_played,\n                    rx.button(\n                        \"Next Round\",\n                        on_click=PublicGoodState.prepare_next_round,\n                        width=\"100%\",\n                        size=\"lg\",\n                        color_scheme=\"blue\"\n                    ),\n                    rx.button(\n                        \"Submit Decision\",\n                        on_click=PublicGoodState.play_game,\n                        width=\"100%\",\n                        size=\"lg\",\n                        color_scheme=\"gray\",\n                        is_disabled=(PublicGoodState.contribution_error != \"\") # Disable if there\'s a contribution error\n                    )\n                )\n            ),\n            \n            rx.cond(\n                PublicGoodState.game_played,\n                rx.vstack(\n                    rx.heading(\"Round Results\", size=\"md\", margin_top=\"4\"),\n                    rx.text(PublicGoodState.computer_contributions_str, white_space=\"pre-wrap\"),\n                    rx.divider(),\n                    rx.hstack(\n                        rx.vstack(rx.text(\"Total Pool\", size=\"sm\", color_scheme=\"gray\"), rx.heading(PublicGoodState.total_contribution.to_string(), size=\"2xl\"), align_items=\"center\", flex_grow=1,text_align=\"center\"),\n                        rx.vstack(rx.text(\"Multiplied Amount\", size=\"sm\", color_scheme=\"gray\"), rx.heading(PublicGoodState.multiplied_pool.to_string(precision=0), size=\"2xl\"), align_items=\"center\",flex_grow=1,text_align=\"center\"),\n                        rx.vstack(rx.text(\"Your Share\", size=\"sm\", color_scheme=\"gray\"), rx.heading(PublicGoodState.per_share.to_string(precision=0), size=\"2xl\"), align_items=\"center\",flex_grow=1,text_align=\"center\"),\n                        justify=\"between\",\n                        width=\"100%\",\n                        spacing=\"4\",\n                        padding_y=\"2\"\n                    ),\n                    rx.divider(),\n                    rx.vstack(\n                        rx.text(\"Your payoff this round\", size=\"md\", color_scheme=\"gray\"),\n                        rx.heading(PublicGoodState.human_payoff.to_string(precision=0), size=\"3xl\"),\n                        align_items=\"center\",\n                        padding_y=\"2\"\n                    ),\n                    rx.text(f\"Your new balance: {PublicGoodState.human_balance}\", size=\"sm\", color_scheme=\"gray\", text_align=\"center\", width=\"100%\"),\n                    spacing=\"3\",\n                    width=\"100%\",\n                    align_items=\"stretch\",\n                    padding=\"4\",\n                    border=\"1px solid #ddd\",\n                    border_radius=\"md\",\n                    margin_top=\"4\"\n                )\n            ),\n            spacing=\"4\",\n            align_items=\"stretch\"\n        ),\n        width=\"clamp(300px, 80%, 600px)\", # Responsive width\n        margin_x=\"auto\",\n        margin_top=\"2em\",\n        padding=\"6\"\n    )\n 